// this bit of complexity is to pull down the main build script from the alclabs maven repository
// and then apply it.
configurations { gradleScript }
repositories { mavenRepo url: 'http://repo.alcshare.com' }
dependencies { gradleScript group: 'com.alcshare', name: 'alclabs-gradle', ext: 'gradle', version: '1.18' }
apply from: configurations.gradleScript.resolve().iterator().next()

info {
  name = 'Zone History'
  description =
      'Displays a pie chart showing historical equipment color for zones (i.e. equipment with a set point). '+
      'Can also display the pie chart on an ViewBuilder graphic using the webapp content control.'
  version = '1.4'//+" dev " + new Date()
  vendor = 'ALC Labs'
}

// required for compatibility with 4.1 level Java VM
sourceCompatibility = 1.5
targetCompatibility = 1.5

dependencies {
   compile 'jstl:jstl:1.2'
   compile 'taglibs:standard:1.1.2'
   compile 'org.json:json:20090211'
   compile 'commons-lang:commons-lang:2.4'

   testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
   testCompile 'org.hamcrest:hamcrest-all:1.1'
   testCompile 'com.googlecode.multithreadedtc:multithreadedtc:1.01'

   groovy 'org.codehaus.groovy:groovy-all:1.8.6'

   providedCompile 'com.controlj.green:addonsupport-api-addon:1.2.0'
   providedCompile 'com.controlj.green:directaccess-api-addon:1.2.0'
   providedCompile 'com.controlj.green:webaccess-api-addon:1.2.0'
   providedCompile 'javax.servlet:servlet-api:2.5'
}

// The following strangeness is to get groovy dependencies only in the test configurations
configurations {
    compile.extendsFrom = [ providedCompile ]
    testCompile.extendsFrom groovy
}